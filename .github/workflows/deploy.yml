name: Deploy Flask RAG API with Docker

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Add VPS to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Application
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} /bin/bash << 'DEPLOY_EOF'
          set -euo pipefail

          # Clean previous deployment
          echo "➤ Removing old deployment..."
          rm -rf ~/flask_diya_rag_api

          # Clone repository
          echo "➤ Cloning repository..."
          git clone https://github.com/diyadave/flask_rag_apikey.git ~/flask_diya_rag_api
          cd ~/flask_diya_rag_api

          # Setup environment
          echo "➤ Configuring environment..."
          cat <<EOT > .env
          MEDIA_ROOT=books
          FAISS_DB_DIR=faiss_db
          GROQ_API_KEY=${GROQ_API_KEY}
          GROQ_MODEL=llama3-8b-8192
          GROQ_API_URL=https://api.groq.com/openai/v1/chat/completions
          JWT_SECRET_KEY=${JWT_SECRET_KEY}
          JWT_ACCESS_TOKEN_EXPIRES=3600
          FLASK_ENV=production
          SECRET_KEY=${JWT_SECRET_KEY}
          EOT
          chmod 600 .env

          # Validate critical files
          echo "➤ Validating resources..."
          if [ ! -d "books" ]; then
            echo "❌ Error: 'books' directory missing!"
            exit 1
          fi
          if [ ! -d "faiss_db" ] || [ ! -f "faiss_db/index.faiss" ]; then
            echo "❌ Error: FAISS index missing!"
            exit 1
          fi

          # Prepare directories
          mkdir -p model_cache
          chmod -R 755 books faiss_db model_cache

          # Docker deployment
          echo "➤ Starting Docker deployment..."
          docker stop flask-diya-api || true
          docker rm flask-diya-api || true

          docker build -t flask-diya-api . || { echo "❌ Docker build failed"; exit 1; }

          docker run -d \
            -p 5007:5000 \
            --env-file .env \
            -v $(pwd)/model_cache:/root/.cache/torch/sentence_transformers \
            -v $(pwd)/books:/app/books \
            -v $(pwd)/faiss_db:/app/faiss_db \
            --name flask-diya-api \
            --restart unless-stopped \
            flask-diya-api || { echo "❌ Container startup failed"; exit 1; }

          # Health check
          echo "➤ Verifying deployment..."
          sleep 10
          if docker ps | grep -q flask-diya-api; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Container not running!"
            docker logs flask-diya-api --tail 50
            exit 1
          fi
          DEPLOY_EOF
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}