name: Deploy Flask RAG API with Docker

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Add VPS to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Application
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << EOF
          set -euo pipefail

          echo "➤ Removing old deployment..."
          rm -rf ~/flask_diya_rag_api

          echo "➤ Cloning repository..."
          git clone https://github.com/diyadave/flask_rag_apikey.git ~/flask_diya_rag_api
          cd ~/flask_diya_rag_api

          echo "➤ Configuring environment..."
          echo "MEDIA_ROOT=books" > .env
          echo "FAISS_DB_DIR=faiss_db" >> .env
          echo "GROQ_API_KEY=$GROQ_API_KEY" >> .env
          echo "GROQ_MODEL=llama3-8b-8192" >> .env
          echo "GROQ_API_URL=https://api.groq.com/openai/v1/chat/completions" >> .env
          echo "JWT_SECRET_KEY=$JWT_SECRET_KEY" >> .env
          echo "JWT_ACCESS_TOKEN_EXPIRES=3600" >> .env
          echo "FLASK_ENV=production" >> .env
          echo "SECRET_KEY=$JWT_SECRET_KEY" >> .env
          chmod 600 .env

          echo "➤ Validating resources..."
          if [ ! -d "books" ]; then
            echo "❌ 'books' directory missing!"
            exit 1
          fi
          if [ ! -f "faiss_db/index.faiss" ]; then
            echo "❌ FAISS index missing!"
            exit 1
          fi

          mkdir -p model_cache
          chmod -R 755 books faiss_db model_cache

          echo "➤ Starting Docker..."
          docker stop flask-diya-api || true
          docker rm flask-diya-api || true

          docker build -t flask-diya-api . || { echo "❌ Docker build failed"; exit 1; }

          docker run -d \
            -p 5007:5000 \
            --env-file .env \
            -v $(pwd)/model_cache:/root/.cache/torch/sentence_transformers \
            -v $(pwd)/books:/app/books \
            -v $(pwd)/faiss_db:/app/faiss_db \
            --name flask-diya-api \
            --restart unless-stopped \
            flask-diya-api || { echo "❌ Docker run failed"; exit 1; }

          echo "➤ Checking container..."
          sleep 10
          if docker ps | grep -q flask-diya-api; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Container failed!"
            docker logs flask-diya-api --tail 50
            exit 1
          fi
          EOF
